<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Balloon Pop Activity</title>
  <link rel="stylesheet" href="/css/styles.css">
  <style>
    body {
      margin: 0;
      padding: 0;
      overflow: hidden;
      background: #87CEFA;
      position: relative;
      font-family: sans-serif;
    }
    /* Banner at the top */
    #banner {
     


     font-size: 20px;
      font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;
     color: rgba(0, 0, 0, 0.3); /* Light and subtle */
     pointer-events: none; /* Prevent interaction */
      white-space: nowrap; 

      position: fixed;
      top: 50%;
      left: 50%;
      transform: translateX(-50%);
      width: 100%;
      text-align: center;
      padding: 10px;
      
      z-index: 10;
    }
    .balloon {
      position: absolute;
      bottom: -200px; /* start further below */
      width: 50px;
      height: 70px;
      background-color: #ff4d4d;
      border-radius: 50% 50% 45% 45%;
      cursor: pointer;
      opacity: 0.9;
      transition: transform 0.2s;
    }
    /* Thread (string) added as a pseudo-element */
    .balloon::after {
      content: "";
      position: absolute;
      left: 50%;
      bottom: -20px;
      transform: translateX(-50%);
      width: 2px;
      height: 20px;
      background: #555;
    }
    .pop {
      transform: scale(0);
      transition: transform 0.2s;
    }
    #continueBtn {
      position: fixed;
      bottom: 20px;
      left: 50%;
      transform: translateX(-50%);
      padding: 20px 30px;
      background-color: #9b59b6;
      color: #fff;
      border: none;
      border-radius: 5px;
      display: none;
      font-size: 18px;
      cursor: pointer;
      z-index: 10;
      align-content: center;
    }
  </style>
</head>
<body>
  <div id="banner">Before music, let's just pop all the balloons! <br><br> ( Just Click on them ! ) </div>
  <button id="continueBtn" onclick="window.location.href='/cake'">Continue to Cake Ceremony</button>
  <script>
    const totalBalloons = 10;
    let poppedCount = 0;
    function createBalloon(id) {
      const balloon = document.createElement('div');
      balloon.classList.add('balloon');
      balloon.style.left = Math.random() * (window.innerWidth - 50) + 'px';
      // Random color for fun
      balloon.style.backgroundColor = 'hsl(' + Math.random() * 360 + ', 70%, 60%)';
      balloon.addEventListener('click', function() {
        if (!balloon.classList.contains('pop')) {
          balloon.classList.add('pop');
          poppedCount++;
          if (poppedCount === totalBalloons) {
            document.getElementById('continueBtn').style.display = 'block';
          }
        }
      });
      document.body.appendChild(balloon);
      // Animate balloon upward with half the speed (doubling the duration)
      let start = null;
      const duration = (4000 + Math.random() * 2000) * 3; 
      function animate(timestamp) {
  if (!start) start = timestamp;
  const progress = timestamp - start;
  
  // Calculate how far up the balloon has traveled
  const newPos = -1000 + (progress / duration) * (window.innerHeight + 400);
  balloon.style.bottom = newPos + 'px';

  // If the balloon is off the top of the screen, remove it immediately
  // (instead of waiting for the entire duration).
  if (newPos > window.innerHeight -1000) {
    // If not popped yet, count it as removed.
    if (!balloon.classList.contains('pop')) {
      poppedCount++;
      if (poppedCount === totalBalloons) {
        document.getElementById('continueBtn').style.display = 'block';
      }
    }
    balloon.remove();
    return;  // Stop the animation loop for this balloon
  }
  
  // Otherwise, keep animating if we haven't hit the full duration
  if (progress < duration) {
    requestAnimationFrame(animate);
  } else {
    // Fallback if something else ends the animation
    // (Typically this won't happen if the above if-statement catches the balloon first.)
    if (!balloon.classList.contains('pop')) {
      poppedCount++;
      if (poppedCount === totalBalloons) {
        document.getElementById('continueBtn').style.display = 'block';
      }
    }
    balloon.remove();
  }
}
      requestAnimationFrame(animate);
    }
    for (let i = 0; i < totalBalloons; i++){
      setTimeout(() => {
        createBalloon(i);
      }, i * 500);
    }
  </script>
</body>
</html>